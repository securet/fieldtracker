<?xml version="1.0" encoding="UTF-8"?>
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.0.xsd" default-menu-include="false">
	<!-- set userGroupId so that when an Account is created it will be added to that group -->
	<always-actions>
		<set field="userGroupId" from="FIELD_TRACKER_USER" />
	</always-actions>

	<transition name="findUser">
		<default-response url="." />
	</transition>
	<transition name="createUser">
		<actions>
			<script>
				Map uploadFileToRuntime(snapshotFile,purpose,pathToSave){
					if(org.moqui.impl.StupidJavaUtilities.isEmpty(snapshotFile.getName())){
			            ec.message.addError(purpose + " file is required"); 
			            return;
					}
		            String filename = snapshotFile.getName();
		            String fileExt = org.apache.commons.io.FilenameUtils.getExtension(filename);
		            String savedFilename = purpose + "_" + StupidUtilities.getRandomString(6) + "_" + System.currentTimeMillis() + "." + fileExt;
		            if (!(filename.endsWith(".jpg") || filename.endsWith(".png"))) { 
			            ec.message.addError("File ${filename} is not a jpg/png file, should be a zip containing one or more xml data files"); 
			            return;
					}
		            File targetFile = new File((String) ec.factory.getRuntimePath() + pathToSave + savedFilename)
		            if (targetFile.exists()) {
						ec.message.addError("File ${filename} already exists"); 
						return; 
					}
		            InputStream fileStream = snapshotFile.getInputStream()
		            try {
						targetFile.append(fileStream)
					} finally {
						fileStream.close()
					}
					result = [:];
					result.savedFilename=savedFilename;
					return result;
				}
				result = uploadFileToRuntime(userPhoto,"userPhoto",'/uploads/uid/');
				if(result){
					context.userPhotoPath = result.savedFilename;
				}
				result = uploadFileToRuntime(addressId,"addressId",'/uploads/uid/');
				if(result){
					context.addressIdPath = result.savedFilename			
				}
				result = uploadFileToRuntime(aadharId,"aadharId",'/uploads/uid/');
				if(result){
					context.aadharIdPath = result.savedFilename			
				}
			</script>
			<service-call name="party.PartyServices.create#Account" in-map="context + [loginAfterCreate:'false']" out-map="context" />
			<service-call name="create#moqui.security.UserGroupMember" in-map="[userGroupId:'FIELD_TRACKER_USER', userId:context.userId, fromDate:ec.user.nowTimestamp]" />
		</actions>
		<default-response url="../FindUser" />
		<error-response url="." />
	</transition>
	<transition name="editUser">
		<default-response url="../EditUser" />
	</transition>

	<pre-actions>
		<set field="html_title" value="Find User" />
	</pre-actions>

	<actions>
		<entity-find entity-name="PersonAndUserAccount" list="userList">
			<search-form-inputs default-order-by="firstName,lastName,username" />
		</entity-find>
	</actions>
	<widgets>
		<container>
			<container-dialog id="FindUserDialog" button-text="Search Users" width="700">
				<form-single name="FindUser" transition="findUser">
					<field name="username">
						<default-field>
							<text-find />
						</default-field>
					</field>
					<field name="firstName">
						<default-field>
							<text-find />
						</default-field>
					</field>
					<field name="lastName">
						<default-field>
							<text-find />
						</default-field>
					</field>
					<field name="emailAddress">
						<default-field>
							<text-find />
						</default-field>
					</field>
					<field name="searchButton">
						<default-field title="Find">
							<submit />
						</default-field>
					</field>
				</form-single>
			</container-dialog>
			<container-dialog id="AddUserDialog" button-text="Add User">
				<form-single name="CreateUser" transition="createUser">
					<field name="firstName">
						<default-field>
							<text-line size="15" />
						</default-field>
					</field>
					<field name="lastName">
						<default-field>
							<text-line size="15" />
						</default-field>
					</field>
					<field name="emailAddress">
						<default-field title="Email Id">
							<text-line />
						</default-field>
					</field>
					<field name="organizationId">
						<default-field title="Organization">
							<drop-down>
								<entity-options key="${partyId}" text="${organizationName}">
									<entity-find entity-name="mantle.party.Organization"></entity-find>
								</entity-options>
							</drop-down>
						</default-field>
					</field>
					<field name="contactNumber">
						<default-field title="Mobile">
							<text-line />
						</default-field>
					</field>
					<field name="address1">
						<default-field>
							<hidden default-value="NA" />
						</default-field>
					</field>
					<field name="directions">
						<default-field title="Address">
							<text-area />
						</default-field>
					</field>
					<field name="userPhoto">
						<default-field>
							<file />
						</default-field>
					</field>
					<field name="addressId">
						<default-field>
							<file />
						</default-field>
					</field>
					<field name="aadharId">
						<default-field>
							<file />
						</default-field>
					</field>
					<field name="roleTypeId">
						<default-field>
							<drop-down>
								<entity-options key="${roleTypeId}" text="${description}">
									<entity-find entity-name="mantle.party.RoleGroupMemberAndType" cache="true">
										<econdition field-name="roleGroupEnumId" value="RgpFieldTracker" />
										<order-by field-name="description" />
									</entity-find>
								</entity-options>
							</drop-down>
						</default-field>
					</field>
					<field name="username">
						<default-field tooltip="Leave blank to use Email Address">
							<text-line size="20" />
						</default-field>
					</field>
					<field name="newPassword">
						<default-field title="Password">
							<password size="15" />
						</default-field>
					</field>
					<field name="newPasswordVerify">
						<default-field title="Password Verify">
							<password size="15" />
						</default-field>
					</field>
					<field name="requirePasswordChange">
						<default-field>
							<hidden default-value="Y" />
						</default-field>
					</field>
					<field name="submitButton">
						<default-field title="Create User">
							<submit />
						</default-field>
					</field>
				</form-single>
			</container-dialog>
		</container>

		<form-list name="UserList" list="userList">
			<row-actions>
				<entity-find entity-name="mantle.party.PartyRole" limit="1" list="partyRoles">
					<econdition field-name="partyId" />
				</entity-find>
				<if condition="partyRoles">
					<set field="roleTypeId" from="partyRoles[0].roleTypeId" />
				</if>
			</row-actions>
			<field name="username">
				<header-field show-order-by="case-insensitive" />
				<default-field>
					<link url="editUser" text="${username?:'--'}" link-type="anchor" />
				</default-field>
			</field>
			<field name="firstName">
				<header-field show-order-by="case-insensitive" />
				<default-field>
					<display />
				</default-field>
			</field>
			<field name="lastName">
				<header-field show-order-by="case-insensitive" />
				<default-field>
					<display />
				</default-field>
			</field>
			<field name="emailAddress">
				<header-field show-order-by="case-insensitive" />
				<default-field>
					<display />
				</default-field>
			</field>
			<field name="roleTypeId">
				<default-field>
					<display />
				</default-field>
			</field>
			<field name="locale">
				<header-field show-order-by="case-insensitive" />
				<default-field>
					<display />
				</default-field>
			</field>
			<field name="timeZone">
				<header-field show-order-by="case-insensitive" />
				<default-field>
					<display />
				</default-field>
			</field>
			<field name="disabled">
				<header-field title="Disabled?" show-order-by="case-insensitive" />
				<default-field>
					<display />
				</default-field>
			</field>
		</form-list>
	</widgets>
</screen>
